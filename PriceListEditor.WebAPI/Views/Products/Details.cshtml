@model PriceListEditor.Application.PriceLists.Queries.GetPriceListDetails.DetailsListVm
@{
    ViewData["Title"] = "Details";
}

<!DOCTYPE html>

<html>
<head>
    <title>Product</title>
</head>
<body>
<div class="text-center">
<div class="row">
    <div class="col">
        <h1>Товары: </h1>
    </div>
    <div class="col text-right">
        <a asp-controller="Products" asp-action="Create" asp-route-id="@ViewData["IdPriceList"]" class="btn btn-success">Добавить новый продукт</a>
    </div>
</div>
<hr>
<table id="sortable" class="table table-bordered">
    <thead>
    <tr>
        <th>Наименование товара</th>
        <th data-type="number" >Артикул</th>
        @foreach (var product in Model.Products)
        {
            foreach (var column in product.Columns)
            {
                <th>
                    @Html.DisplayFor(columItem => column.Name)
                </th>
            }
            break;
        }
        <th></th>
    </tr>
    </thead>
    <tbody>
    @foreach (var prod in Model.Products)
    {
        if (prod.ProductCode == 1)
            continue;
        <tr id="row_@prod.Id">
            <td>
                @Html.DisplayFor(modelItem => prod.ProductName)
            </td>
            <td>
                @Html.DisplayFor(modelItem => prod.ProductCode)
            </td>
            @foreach (var column in prod.Columns)
            {
                <td>
                    @Html.DisplayFor(columItem => column.Value)
                </td>
            }
            <td>
                @Html.ActionLink("Редактировать", "Edit", new { id = prod.Id }, new { @class = "btn btn-primary" })
                <a class="btn btn-danger" data-bs-toggle="modal" data-bs-target="#deProdlModal" onclick="ConfirmDelete('@prod.Id')">
                    Удалить
                </a>
                <div class="modal fade" id="deProdlModal" tabindex="-1" aria-labelledby="delProdModalLabel" aria-hidden="true">
                    <div class="modal-dialog">
                        <div class="modal-content">
                            <div class="modal-header">
                                <h5 class="modal-title" id="delProdModalLabel">Подтверждение удаления товара</h5>
                                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Закрыть"></button>
                            </div>
                            <div class="modal-body">
                                Вы действительно хотит удалить данный прайс-лист?
                            </div>
                            <div class="modal-footer">
                                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Закрыть</button>
                                <button type="button" class="btn btn-danger" onclick="DeleteEmployee()">Удалить</button>
                            </div>
                        </div>
                    </div>
                </div>
            </td>
        </tr>
    }
    </tbody>
</table>
</div>
</body>
</html>

<input type="hidden" id="hiddenId" />

@section scripts{
    <script>
    const table = document.getElementById('sortable');
    const headers = table.querySelectorAll('th');
    const tableBody = table.querySelector('tbody');
    const rows = tableBody.querySelectorAll('tr');
    
    const directions = Array.from(headers).map(function(header) {
            return '';
        });
    
     const transform = function(index, content) {
            const type = headers[index].getAttribute('data-type');
            switch (type) {
                case 'number':
                    return parseFloat(content);
                case 'string':
                default:
                    return content;
            }
        };
    
    const sortColumn = function(index) {
            // Получить текущее направление
            const direction = directions[index] || 'asc';
    
            // Фактор по направлению
            const multiplier = (direction === 'asc') ? 1 : -1;
    
            const newRows = Array.from(rows);
    
            newRows.sort(function(rowA, rowB) {
                const cellA = rowA.querySelectorAll('td')[index].innerHTML;
                const cellB = rowB.querySelectorAll('td')[index].innerHTML;
    
                const a = transform(index, cellA);
                const b = transform(index, cellB);    
    
                switch (true) {
                    case a > b: return 1 * multiplier;
                    case a < b: return -1 * multiplier;
                    case a === b: return 0;
                }
            });
    
            // Удалить старые строки
            [].forEach.call(rows, function(row) {
                tableBody.removeChild(row);
            });
    
            // Поменять направление
            directions[index] = direction === 'asc' ? 'desc' : 'asc';
    
            // Добавить новую строку
            newRows.forEach(function(newRow) {
                tableBody.appendChild(newRow);
            });
        };
    
        [].forEach.call(headers, function(header, index) {
                header.addEventListener('click', function() {
                    sortColumn(index);
                });
            });
        
        let ConfirmDelete = function (Id) {
            $("#hiddenId").val(Id);
            $("#deProdlModal").modal('show');
        }
        var DeleteEmployee = function () {
            var empId = $("#hiddenId").val();
            $.ajax({
                type: "POST",
                url: "/Products/Delete/",
                data: { Id: empId },
                success: function (result) {        
                    $("#deProdlModal").modal("hide");
                    $("#row_" + empId).remove();
                }
            })
        }
</script>
}